label { cursor: hand; }
.tile,.picker label { background-image: url(https://lh3.googleusercontent.com/u/0/drive-viewer/AFGJ81rmuo_6NPyqvyGba4UwHRunneLejFLj5jGPy8LxN28UGAqkqJD1uuWnrFFfHvj-XHlTfl2uf4fIfR_SnKBTd5X8kDA-3A=w1600-h827); min-width: 7px; min-height: 47px; }

.bus input { position: absolute; left: -999px; }

.shadow label {
    display: inline-flex;
    flex-direction: column;
    min-height: 47px;
    justify-content: space-between;
    align-items: center;
    vertical-align: bottom;
}

.picker {
    display: none;
    position: absolute;
    margin-top: 47px;
    white-space: nowrap;
    z-index: 998;
    border: 1px solid gray;
    border-radius: 7px;
    padding: 1px;
    background-color: silver;
    opacity: 0.8;
    transition: background-color 0.5s;
}

.picker input + .w  { min-height: 20px; }
.picker input + .a,
.picker input + .l { min-height: 16px; }
.picker input + label:hover { background-color: white; }

.picker :checked + label {
    border: 1px solid red;
    background-color: white;
    border-radius: 2px;
}

.picker label { display: inline-block; margin: 1px; } 

:root {
    --wheel-offset: -29px;
    --window-offset: -47px;
    --door-offset: -78px;
    --head-offset: -103px;
    --extra-offset: -110px;
    --aft-offset: -152px;
    --v-offset: -47px;
}

.shadow:has(~ .picker :checked + .h0) .top, .h0 { background-position: var(--head-offset) 0; width: 7px; }
.shadow:has(~ .picker :checked + .h1) .top, .h1 { background-position: var(--head-offset) var(--v-offset); width: 7px; }

.shadow:has(~ .picker :checked + .t0) .top, .t0 { background-position: 0 0; width: 7px; }
.shadow:has(~ .picker :checked + .t1) .top, .t1 { background-position: -8px 0; width: 20px; }

.shadow:has(~ .picker :checked + .d0) .top, .d0 { background-position: var(--door-offset) 0; width: 16px; }
.shadow:has(~ .picker :checked + .d1) .top, .d1 { background-position: var(--door-offset) var(--v-offset); width: 16px; }
.shadow:has(~ .picker :checked + .d2) .top, .d2 { background-position: var(--door-offset) calc(var(--v-offset) * 2); width: 16px; }
.shadow:has(~ .picker :checked + .d3) .top, .d3 { background-position: var(--door-offset) calc(var(--v-offset) * 3); width: 16px; }
.shadow:has(~ .picker :checked + .d4) .top, .d4 { background-position: var(--door-offset) calc(var(--v-offset) * 4); width: 22px; }
.shadow:has(~ .picker :checked + .d5) .top, .d5 { background-position: var(--door-offset) calc(var(--v-offset) * 5); width: 22px; }
.shadow:has(~ .picker :checked + .d6) .top, .d6 { background-position: var(--door-offset) calc(var(--v-offset) * 6); width: 24px; }
.shadow:has(~ .picker :checked + .d7) .top, .d7 { background-position: var(--door-offset) calc(var(--v-offset) * 7); width: 22px; }
.shadow:has(~ .picker :checked + .d8) .top, .d8 { background-position: var(--door-offset) calc(var(--v-offset) * 8); width: 16px; }

.shadow:has(~ .picker :checked + .w) .top,
.w { min-height: 21px; }
.shadow:has(~ .picker :checked + .w0) .top, .w0 { background-position: var(--window-offset) 0; width: 25px;  }
.shadow:has(~ .picker :checked + .w1) .top, .w1 { background-position: var(--window-offset) var(--v-offset); width: 25px; }
.shadow:has(~ .picker :checked + .w2) .top, .w2 { background-position: var(--window-offset) calc(var(--v-offset) * 2); width: 25px; }
.shadow:has(~ .picker :checked + .w3) .top, .w3 { background-position: var(--window-offset) calc(var(--v-offset) * 3); width: 16px; }
.shadow:has(~ .picker :checked + .w4) .top, .w4 { background-position: var(--window-offset) calc(var(--v-offset) * 4); width: 14px; }
.shadow:has(~ .picker :checked + .w5) .top, .w5 { background-position: var(--window-offset) calc(var(--v-offset) * 5); width: 16px; }
.shadow:has(~ .picker :checked + .w6) .top, .w6 { background-position: var(--window-offset) calc(var(--v-offset) * 6); width: 7px; }
.shadow:has(~ .picker :checked + .w7) .top, .w7 { background-position: var(--window-offset) calc(var(--v-offset) * 7); width: 30px; }
.shadow:has(~ .picker :checked + .w8) .top, .w8 { background-position: var(--window-offset) calc(var(--v-offset) * 8); width: 30px; }

.shadow:has(~ .picker :checked + .a) .bottom,
.a { min-height: 16px; }
.shadow:has(~ .picker :checked + .a0) .bottom, .a0 { background-position: var(--wheel-offset) -29px; width: 16px; }
.shadow:has(~ .picker :checked + .a1) .bottom, .a1 { background-position: var(--wheel-offset) calc(var(--v-offset) * 1 - 29px); width: 17px; }
.shadow:has(~ .picker :checked + .a2) .bottom, .a2 { background-position: var(--wheel-offset) calc(var(--v-offset) * 2 - 29px); width: 15px; }
.shadow:has(~ .picker :checked + .a3) .bottom, .a3 { background-position: var(--wheel-offset) calc(var(--v-offset) * 3 - 29px); width: 16px; }
.shadow:has(~ .picker :checked + .a4) .bottom, .a4 { background-position: var(--wheel-offset) calc(var(--v-offset) * 4 - 29px); width: 17px; }
.shadow:has(~ .picker :checked + .a5) .bottom, .a5 { background-position: var(--wheel-offset) calc(var(--v-offset) * 5 - 29px); width: 15px; }

.shadow:has(~ .picker input:checked + .l) .bottom,
.l { min-height: 16px; }
.shadow:has(~ .picker :checked + .l0) .bottom, .l0 { background-position: var(--window-offset) -29px; width: 18px;  }
.shadow:has(~ .picker :checked + .l1) .bottom, .l1 { background-position: var(--window-offset) calc(var(--v-offset) * 1 - 29px); width: 20px;  }
.shadow:has(~ .picker :checked + .l2) .bottom, .l2 { background-position: var(--window-offset) calc(var(--v-offset) * 2 - 29px); width: 20px;  }
.shadow:has(~ .picker :checked + .l3) .bottom, .l3 { background-position: var(--window-offset) calc(var(--v-offset) * 3 - 29px); width: 20px;  }
.shadow:has(~ .picker :checked + .l4) .bottom, .l4 { background-position: var(--window-offset) calc(var(--v-offset) * 4 - 29px); width: 13px;  }
.shadow:has(~ .picker :checked + .l5) .bottom, .l5 { background-position: var(--window-offset) calc(var(--v-offset) * 5 - 29px); width: 13px;  }

.spot0 { background-position: var(--extra-offset) 0; width: 16px; }
.spot1 { background-position: var(--extra-offset) var(--v-offset); width: 22px; }
.shadow:has(~ .picker :checked + .spot2) .top, .spot2 { background-position: var(--extra-offset) calc(var(--v-offset) * 2); width: 6px; }
.blank { background-position: var(--extra-offset) calc(var(--v-offset) * 3); width: 22px; }
.shadow:has(~ .picker :checked + .f0) .top, .f0 { background-position: var(--extra-offset) 0; width: 42px; }
.shadow:has(~ .picker :checked + .f1) .top, .f1 { background-position: var(--extra-offset) calc(var(--v-offset) * 1); width: 42px; }
.shadow:has(~ .picker :checked + .f2) .top, .f2 { background-position: var(--extra-offset) calc(var(--v-offset) * 3); width: 42px; }
.shadow:has(~ .picker :checked + .r0) .top, .r0 { background-position: var(--aft-offset) 0; width: 38px; }
.shadow:has(~ .picker :checked + .r1) .top, .r1 { background-position: var(--aft-offset) calc(var(--v-offset) * 1); width: 38px; }

.tile.bottom,
.picker input + .a,
.picker input + .l { display: none; }

.shadow,
.shadow:has(~ .picker :checked + .l):has(~ .picker :checked + .w) .bottom,
.shadow:has(~ .picker :checked + .a):has(~ .picker :checked + .w) .bottom,
.picker :checked + .w ~ :checked + .a,
.picker :checked + .w ~ .a,
.picker :checked + .w ~ :checked + .l,
.picker :checked + .w ~ .l { display: inline-block; }

#port:not(:checked) ~ .bus .slot:has(.picker :checked + .h) ~ .slot,
.slot:has(.picker :checked + .spot) ~ .slot:has(.picker :checked + .spot) { display: none; }

.slot:has(.picker :checked + .f) ~ .slot .tile {
    transform: scaleX(-1);
}

.shadow:has(~ .picker :checked + .spot2) .top,
.spot2,
blink {
  animation: blink-animation 1s steps(5, start) infinite;
  -webkit-animation: blink-animation 1s steps(5, start) infinite;
}
@keyframes blink-animation { to { opacity: 0.2; } }
@-webkit-keyframes blink-animation { to { opacity: 0.2; } }

.slot,
.tile { display: inline-block; }
.shadow:has(.close) { background-color: #faa; }
.picker,
.open:checked + label,
.shadow:has(.close) label { display: none; }

.shadow:has(.open:checked) ~ .picker { display: inline-block; }
.shadow:has(.open:checked) ~ .shadow:has(.close) label { display: inline-flex; }

.bus {
    display: inline-block;
    margin: 20px;
}

#ddd:checked ~ .bus {
    transform: perspective(3cm) rotateX(351deg) rotateY(333deg);
}